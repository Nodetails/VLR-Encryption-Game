
function [] = VLR_Dio_Puzzle()

S.count=0;

S.fh = figure('units','pixels',...  %This describes the overall figure dimensions
    'position',[200 140 800 500],...
    'menubar','none',...
    'name','VLR Dio Puzzle',...
    'Resize','off',...
    'NumberTitle','off');
movegui('center')

S.GameRules = uicontrol('style','text',...
                'unit','pix',...
                'FontSize',10,...               
                'Position',[660 200 120 230],...
                'string',{'Rules:';'';'P.1: Enter message and numeric key';' ';'P.2: Guess message from key.  You have 5 tries.';' '; 'Note: sometimes an extra space shows up in P1 message beginning. Remove it.'},...
                'HorizontalAlignment','left');

S.Player1Panel = uipanel('Title','Player l',...
                'unit','pix',...
                'FontSize',12,...               
                'Position',[40 310 590 180]);

S.P1Frame = uicontrol('style','frame',...
                'BackgroundColor','white',...
                'unit','pix',...
                'position',[460 370 90 90]);
    
S.EnterMessage = uicontrol('style','text',...
                'unit','pix',...
                'position',[80 440 140 20],...
                'min',0,'max',2,...
                'fontsize',10,...
                'HorizontalAlignment','left',...
                'string',{'Enter Message'});
             
S.MessageText = uicontrol('style','edit',...
                 'unit','pix',...
                 'position',[80 410 250 20],...
                 'min',0,'max',1,...
                 'BackgroundColor','white',...
                 'fontsize',10,...
                 'HorizontalAlignment','left',...
                 'CallBack',@callb,...
                 'string',''); 
             
S.EnterNumericKey = uicontrol('style','text',...
                 'unit','pix',...
                 'position',[80 370 140 20],...
                 'min',0,'max',2,...
                 'fontsize',10,...
                 'HorizontalAlignment','left',...
                 'string',{'Enter Numeric Key'});
             
S.KeyText = uicontrol('style','edit',...
                 'unit','pix',...
                 'position',[80 340 250 20],...
                 'min',0,'max',1,...
                 'fontsize',10,...
                 'BackgroundColor','white',...
                 'HorizontalAlignment','left',...
                 'CallBack',@callb,...
                 'string',''); 

S.Encrypt = uicontrol('style','pushbutton',...
                 'unit','pix',...
                 'position',[440 340 130 20],...
                 'min',0,'max',1,...
                 'fontsize',10,...
                 'CallBack',@ENCRYPT,...
                 'string',{'Encrypt'}); 
                       
S.Player2Panel = uipanel('Title','Player 2',...
                'unit','pix',...
                'FontSize',12,...
                'Position',[40 20 590 280]);
            
S.P2Frame = uicontrol('style','frame',...
                'BackgroundColor','white',...
                'unit','pix',...
                'position',[460 180 90 90]);

S.EncryptedMessage = uicontrol('style','text',...
                'unit','pix',...
                'position',[80 250 140 20],...
                'fontsize',10,...
                'HorizontalAlignment','left',...
                'CallBack',@callb,...
                'string',{'Encrypted Message'});

S.FrameEncryption = uicontrol('style','frame',...
                'BackgroundColor','white',...
                'unit','pix',...
                'position',[78 28 304 204],...
                'min',0,'max',16,...
                'fontsize',10,...
                'string',{''});

S.Encryption = uicontrol('style','edit',...
                'BackgroundColor','white',...
                'unit','pix',...
                'position',[80 30 300 200],...
                'min',0,'max',16,...
                'fontsize',14,...
                'CallBack',@ENCRYPT,...
                'string',' ',...
                'HorizontalAlignment','left');
                   
S.GuessTheMessage = uicontrol('style','text',...
                'unit','pix',...
                'position',[445 110 120 20],...
                'fontsize',10,...
                'string',{'Guess the Message'});
            
S.GuessText = uicontrol('style','edit',...
                'BackgroundColor','white',...
                'unit','pix',...
                'position',[400 80 220 20],...
                'fontsize',10,...
                'HorizontalAlignment','left',...
                'CallBack',@callb,...
                'string','');
                     
S.Reset = uicontrol('style','pushbutton',...
                'unit','pix',...
                'FontSize',10,...               
                'Position',[660 50 120 20],...
                'string',{'Reset'});
                            
S.Close = uicontrol('style','pushbutton',...
                'unit','pix',...
                'FontSize',10,...               
                'Position',[660 20 120 20],...
                'CallBack',@CLOSE,...
                'string',{'Close'});

S.Guess = uicontrol('style','pushbutton',...
                 'unit','pix',...
                 'position',[445 50 120 20],...
                 'min',0,'max',1,...
                 'fontsize',10,...
                 'string',{'Guess'}); 
             
S.GuessStatic = uicontrol('style','text',...
                 'unit','pix',...
                 'position',[660 150 120 20],...
                 'min',0,'max',1,...
                 'fontsize',10,...
                 'string',{'Current Guess'}); 
             
S.GuessNo = uicontrol('style','edit',...
                'BackgroundColor','white',...
                'unit','pix',...
                'position',[710 125 15 20],...
                'fontsize',10,...
                'HorizontalAlignment','center',...
                'CallBack',@callb,...
                'string','1');
             
set(S.Guess,'CallBack',{@GUESS,S});
set(S.Reset,'CallBack',{@RESET,S});

guidata(S.fh,S); %Stores the S values
end

function [] = callb(varargin)
S = guidata(gcbf);
end


function [] = ENCRYPT(varargin)
S = guidata(gcbf);
uicontrol(S.GuessText);
set(S.MessageText,'BackgroundColor','black');
S.P1 = upper(get(S.MessageText,'string'));

S.KT = sscanf(get(S.KeyText,'string'),'%1d',inf).';

if length(S.KT) > 16   %Makes sure Key length is not larger than 16
        S.P1 = 'Make the key less than 16 digits. Hit Reset.';
        set(S.Encryption,'string',S.P1)
        error('Use less than 16 digits.')
end

for i=1:1:length(S.KT) %Makes sure some dumbass doesn't type in 0
    if S.KT(i)==0
        S.P1 = 'My God!  Are you fucking retarded!?';
        set(S.Encryption,'string',S.P1)
        error ('Do not type in 0, or any non-number!')
    end
end

while length(S.KT)<length(S.P1) %Doubles length of Key in case it is smaller than message
    S.KT = [S.KT,S.KT];
end

while length(S.KT)>length(S.P1) %Removes elements at length points longer than message
    S.KT(length(S.P1)+1)=[];
end

Encryption = zeros(1,sum(S.KT)); %Primes Encryption Array
   
for k =1:1:length(S.KT)
    if k ==1
        summer = S.KT(k); 
    else
        summer = summer + S.KT(k);
    end
    Encryption(summer) = (S.P1(k)); %Ensures message is set into correct key placement locations of Encryption
end

for k =1:1:length(Encryption)
    if Encryption(k) == 0
        Encryption(k) = char(randi([65,90])); %Array elements that do not have message are randomized 
    end
end

for i =1:1:length(Encryption)
    j = i + (i-1);
    EncryptionWithSpaces(j)= Encryption(i);
    if i > 1
         EncryptionWithSpaces(j-1) = 1; %Puts spaces between letters for easier reading
    end
end

counter=1;

while ~isempty(EncryptionWithSpaces)
    if length(EncryptionWithSpaces) <= 19
        for j=1:1:length(EncryptionWithSpaces)
            EF(counter,j)=EncryptionWithSpaces(j);
        end
        EncryptionWithSpaces(1:length(EncryptionWithSpaces))=[]; 
    else
        for j=1:1:19
            EF(counter,j) = EncryptionWithSpaces(j);
        end
        EncryptionWithSpaces(1:20)=[]; 
    end
    counter=counter+1;
end
    
EF = char(EF);

set(S.Encryption,'string',EF);

end

function [] = GUESS(varargin)
N = numel(varargin); % 3 elements in "varagin": the 3rd is where the S data is
S = varargin{N}; %extracts S data
S.count = S.count+1;
if S.count >= 5
    set(S.P1Frame,'BackgroundColor','green');
    set(S.P2Frame,'BackgroundColor','red');             
    set(S.MessageText,'BackgroundColor','white');  
end

set(S.Guess,'CallBack',{@GUESS,S});
S.GT = upper(get(S.GuessText,'string'));
S.P1 = upper(get(S.MessageText,'string'));

if (strcmp(S.GT,S.P1))==1 %Checks if strings equal eachother
    set(S.P1Frame,'BackgroundColor','red');
    set(S.P2Frame,'BackgroundColor','green');
    set(S.MessageText,'BackgroundColor','white');  
else
    if S.count ~= 5
        set(S.GuessNo,'string',S.count+1);
    else
        set(S.GuessNo,'string','F');
    end
end
end

function [] = RESET(varargin)
N=numel(varargin);
S = varargin{N};
set(S.MessageText,'string',' ','BackgroundColor','white');
set(S.KeyText,'string',' ');
set(S.Encryption,'string',' ');
set(S.GuessText,'string',' ');
set(S.P1Frame,'BackgroundColor','white');
set(S.P2Frame,'BackgroundColor','white');
set(S.GuessNo,'string','1');
S.count=0;
set(S.Guess,'CallBack',{@GUESS,S});
end

function [] = CLOSE(varargin)
close all
end
        